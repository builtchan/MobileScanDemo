/* webpaysoap.h
   Generated by wsdl2h 2.8.4 from http://ygp.gzmtr.cn:9090/SnapQRCPay/SLEWebService.asmx?WSDL and typemap.dat
   2017-04-11 07:26:11 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on webpaysoap.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://tempuri.org/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://tempuri.org/"
//gsoap ns1   schema namespace:	http://tempuri.org/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__OrderCommitReq.
class ns1__OrderCommitReq;

//  Forward declaration of class ns1__Request.
class ns1__Request;

//  Forward declaration of class ns1__ArrayOfString.
class ns1__ArrayOfString;

//  Forward declaration of class ns1__OrderCommitResp.
class ns1__OrderCommitResp;

//  Forward declaration of class ns1__Responce.
class ns1__Responce;

//  Forward declaration of class ns1__OrderExecuteResultReq.
class ns1__OrderExecuteResultReq;

//  Forward declaration of class ns1__OrderExecuteResultResp.
class ns1__OrderExecuteResultResp;

//  Forward declaration of class ns1__OrderExecuteFaultReq.
class ns1__OrderExecuteFaultReq;

//  Forward declaration of class ns1__OrderExecuteFaultResp.
class ns1__OrderExecuteFaultResp;

//  Forward declaration of class ns1__HeartBeatReq.
class ns1__HeartBeatReq;

//  Forward declaration of class ns1__HeartBeatResp.
class ns1__HeartBeatResp;

//  Forward declaration of class ns1__SnapQRCodePrePayURLQueryReq.
class ns1__SnapQRCodePrePayURLQueryReq;

//  Forward declaration of class ns1__SnapQRCodePrePayURLQueryResp.
class ns1__SnapQRCodePrePayURLQueryResp;

//  Forward declaration of class ns1__SnapQRCodePayResultQueryReq.
class ns1__SnapQRCodePayResultQueryReq;

//  Forward declaration of class ns1__SnapQRCodePayResultQueryResp.
class ns1__SnapQRCodePayResultQueryResp;

//  Forward declaration of class ns1__SnapQRCodeTakeOrderQueryReq.
class ns1__SnapQRCodeTakeOrderQueryReq;

//  Forward declaration of class ns1__SnapQRCodeTakeOrderQueryResp.
class ns1__SnapQRCodeTakeOrderQueryResp;

//  Forward declaration of class _ns1__S1_USCORE001.
class _ns1__S1_USCORE001;

//  Forward declaration of class _ns1__S1_USCORE001Response.
class _ns1__S1_USCORE001Response;

//  Forward declaration of class _ns1__S1_USCORE004.
class _ns1__S1_USCORE004;

//  Forward declaration of class _ns1__S1_USCORE004Response.
class _ns1__S1_USCORE004Response;

//  Forward declaration of class _ns1__S1_USCORE005.
class _ns1__S1_USCORE005;

//  Forward declaration of class _ns1__S1_USCORE005Response.
class _ns1__S1_USCORE005Response;

//  Forward declaration of class _ns1__S1_USCORE009.
class _ns1__S1_USCORE009;

//  Forward declaration of class _ns1__S1_USCORE009Response.
class _ns1__S1_USCORE009Response;

//  Forward declaration of class _ns1__S1_USCORE018.
class _ns1__S1_USCORE018;

//  Forward declaration of class _ns1__S1_USCORE018Response.
class _ns1__S1_USCORE018Response;

//  Forward declaration of class _ns1__S1_USCORE019.
class _ns1__S1_USCORE019;

//  Forward declaration of class _ns1__S1_USCORE019Response.
class _ns1__S1_USCORE019Response;

//  Forward declaration of class _ns1__S1_USCORE020.
class _ns1__S1_USCORE020;

//  Forward declaration of class _ns1__S1_USCORE020Response.
class _ns1__S1_USCORE020Response;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/// "http://tempuri.org/":Request is a complexType.
class ns1__Request
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfString is a complexType.
class ns1__ArrayOfString
{ public:
/// Size of array of char* is 0..unbounded
   $int                                  __sizestring                   0;
/// Pointer to array char* of length 0..unbounded
    char*                               *string                         0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":Responce is a complexType.
class ns1__Responce
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_001

/// "http://tempuri.org/":S1_001 is a complexType.
class _ns1__S1_USCORE001
{ public:
/// Element orderCommitReq of type "http://tempuri.org/":OrderCommitReq.
    ns1__OrderCommitReq*                 orderCommitReq                 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_001Response

/// "http://tempuri.org/":S1_001Response is a complexType.
class _ns1__S1_USCORE001Response
{ public:
/// Element S1_001Result of type "http://tempuri.org/":OrderCommitResp.
    ns1__OrderCommitResp*                S1_USCORE001Result             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_004

/// "http://tempuri.org/":S1_004 is a complexType.
class _ns1__S1_USCORE004
{ public:
/// Element orderExecuteResultReq of type "http://tempuri.org/":OrderExecuteResultReq.
    ns1__OrderExecuteResultReq*          orderExecuteResultReq          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_004Response

/// "http://tempuri.org/":S1_004Response is a complexType.
class _ns1__S1_USCORE004Response
{ public:
/// Element S1_004Result of type "http://tempuri.org/":OrderExecuteResultResp.
    ns1__OrderExecuteResultResp*         S1_USCORE004Result             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_005

/// "http://tempuri.org/":S1_005 is a complexType.
class _ns1__S1_USCORE005
{ public:
/// Element orderExecuteFaultReq of type "http://tempuri.org/":OrderExecuteFaultReq.
    ns1__OrderExecuteFaultReq*           orderExecuteFaultReq           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_005Response

/// "http://tempuri.org/":S1_005Response is a complexType.
class _ns1__S1_USCORE005Response
{ public:
/// Element S1_005Result of type "http://tempuri.org/":OrderExecuteFaultResp.
    ns1__OrderExecuteFaultResp*          S1_USCORE005Result             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_009

/// "http://tempuri.org/":S1_009 is a complexType.
class _ns1__S1_USCORE009
{ public:
/// Element heartBeatReq of type "http://tempuri.org/":HeartBeatReq.
    ns1__HeartBeatReq*                   heartBeatReq                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_009Response

/// "http://tempuri.org/":S1_009Response is a complexType.
class _ns1__S1_USCORE009Response
{ public:
/// Element S1_009Result of type "http://tempuri.org/":HeartBeatResp.
    ns1__HeartBeatResp*                  S1_USCORE009Result             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_018

/// "http://tempuri.org/":S1_018 is a complexType.
class _ns1__S1_USCORE018
{ public:
/// Element snapQRCodePrePayURLQueryReq of type "http://tempuri.org/":SnapQRCodePrePayURLQueryReq.
    ns1__SnapQRCodePrePayURLQueryReq*    snapQRCodePrePayURLQueryReq    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_018Response

/// "http://tempuri.org/":S1_018Response is a complexType.
class _ns1__S1_USCORE018Response
{ public:
/// Element S1_018Result of type "http://tempuri.org/":SnapQRCodePrePayURLQueryResp.
    ns1__SnapQRCodePrePayURLQueryResp*   S1_USCORE018Result             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_019

/// "http://tempuri.org/":S1_019 is a complexType.
class _ns1__S1_USCORE019
{ public:
/// Element snapQRCodePayResultQueryReq of type "http://tempuri.org/":SnapQRCodePayResultQueryReq.
    ns1__SnapQRCodePayResultQueryReq*    snapQRCodePayResultQueryReq    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_019Response

/// "http://tempuri.org/":S1_019Response is a complexType.
class _ns1__S1_USCORE019Response
{ public:
/// Element S1_019Result of type "http://tempuri.org/":SnapQRCodePayResultQueryResp.
    ns1__SnapQRCodePayResultQueryResp*   S1_USCORE019Result             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_020

/// "http://tempuri.org/":S1_020 is a complexType.
class _ns1__S1_USCORE020
{ public:
/// Element snapQRCodeTakeOrderQueryReq of type "http://tempuri.org/":SnapQRCodeTakeOrderQueryReq.
    ns1__SnapQRCodeTakeOrderQueryReq*    snapQRCodeTakeOrderQueryReq    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":S1_020Response

/// "http://tempuri.org/":S1_020Response is a complexType.
class _ns1__S1_USCORE020Response
{ public:
/// Element S1_020Result of type "http://tempuri.org/":SnapQRCodeTakeOrderQueryResp.
    ns1__SnapQRCodeTakeOrderQueryResp*   S1_USCORE020Result             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":OrderCommitReq is a complexType with complexContent extension of "http://tempuri.org/":Request.
class ns1__OrderCommitReq : public ns1__Request
{ public:
/*  INHERITED FROM ns1__Request:
    END OF INHERITED FROM ns1__Request */
/// Element reqSysDate of type xs:string.
    char*                                reqSysDate                     0;	///< Optional element.
/// Element operationCode of type xs:string.
    char*                                operationCode                  0;	///< Optional element.
/// Element cityCode of type xs:string.
    char*                                cityCode                       0;	///< Optional element.
/// Element deviceId of type xs:string.
    char*                                deviceId                       0;	///< Optional element.
/// Element channelType of type xs:string.
    char*                                channelType                    0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
/// Element paymentCode of type xs:string.
    char*                                paymentCode                    0;	///< Optional element.
/// Element msisdn of type xs:string.
    char*                                msisdn                         0;	///< Optional element.
/// Element iccid of type xs:string.
    char*                                iccid                          0;	///< Optional element.
/// Element serviceId of type xs:string.
    char*                                serviceId                      0;	///< Optional element.
/// Element paymentVendor of type xs:string.
    char*                                paymentVendor                  0;	///< Optional element.
/// Element pickupStationCode of type xs:string.
    char*                                pickupStationCode              0;	///< Optional element.
/// Element getOffStationCode of type xs:string.
    char*                                getOffStationCode              0;	///< Optional element.
/// Element singleTicketPrice of type xs:string.
    char*                                singleTicketPrice              0;	///< Optional element.
/// Element singleTicketNum of type xs:string.
    char*                                singleTicketNum                0;	///< Optional element.
/// Element singleTicketType of type xs:string.
    char*                                singleTicketType               0;	///< Optional element.
};

/// "http://tempuri.org/":OrderCommitResp is a complexType with complexContent extension of "http://tempuri.org/":Responce.
class ns1__OrderCommitResp : public ns1__Responce
{ public:
/*  INHERITED FROM ns1__Responce:
    END OF INHERITED FROM ns1__Responce */
/// Element respCode of type xs:string.
    char*                                respCode                       0;	///< Optional element.
/// Element respCodeMemo of type xs:string.
    char*                                respCodeMemo                   0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
/// Element partnerNo of type xs:string.
    char*                                partnerNo                      0;	///< Optional element.
/// Element orderNo of type xs:string.
    char*                                orderNo                        0;	///< Optional element.
/// Element subject of type xs:string.
    char*                                subject                        0;	///< Optional element.
/// Element body of type xs:string.
    char*                                body                           0;	///< Optional element.
/// Element payType of type xs:string.
    char*                                payType                        0;	///< Optional element.
/// Element amount of type xs:string.
    char*                                amount                         0;	///< Optional element.
/// Element account of type xs:string.
    char*                                account                        0;	///< Optional element.
/// Element notifyUrl of type xs:string.
    char*                                notifyUrl                      0;	///< Optional element.
/// Element merchantCert of type xs:string.
    char*                                merchantCert                   0;	///< Optional element.
/// Element timeout of type xs:int.
    int                                  timeout                        1;	///< Required element.
};

/// "http://tempuri.org/":OrderExecuteResultReq is a complexType with complexContent extension of "http://tempuri.org/":Request.
class ns1__OrderExecuteResultReq : public ns1__Request
{ public:
/*  INHERITED FROM ns1__Request:
    END OF INHERITED FROM ns1__Request */
/// Element reqSysDate of type xs:string.
    char*                                reqSysDate                     0;	///< Optional element.
/// Element operationCode of type xs:string.
    char*                                operationCode                  0;	///< Optional element.
/// Element cityCode of type xs:string.
    char*                                cityCode                       0;	///< Optional element.
/// Element deviceId of type xs:string.
    char*                                deviceId                       0;	///< Optional element.
/// Element channelType of type xs:string.
    char*                                channelType                    0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
/// Element orderNo of type xs:string.
    char*                                orderNo                        0;	///< Optional element.
/// Element takeSingleTicketNum of type xs:int.
    int                                  takeSingleTicketNum            1;	///< Required element.
/// Element takeSingleTicketDate of type xs:string.
    char*                                takeSingleTicketDate           0;	///< Optional element.
};

/// "http://tempuri.org/":OrderExecuteResultResp is a complexType with complexContent extension of "http://tempuri.org/":Responce.
class ns1__OrderExecuteResultResp : public ns1__Responce
{ public:
/*  INHERITED FROM ns1__Responce:
    END OF INHERITED FROM ns1__Responce */
/// Element respCode of type xs:string.
    char*                                respCode                       0;	///< Optional element.
/// Element respCodeMemo of type xs:string.
    char*                                respCodeMemo                   0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
};

/// "http://tempuri.org/":OrderExecuteFaultReq is a complexType with complexContent extension of "http://tempuri.org/":Request.
class ns1__OrderExecuteFaultReq : public ns1__Request
{ public:
/*  INHERITED FROM ns1__Request:
    END OF INHERITED FROM ns1__Request */
/// Element reqSysDate of type xs:string.
    char*                                reqSysDate                     0;	///< Optional element.
/// Element operationCode of type xs:string.
    char*                                operationCode                  0;	///< Optional element.
/// Element cityCode of type xs:string.
    char*                                cityCode                       0;	///< Optional element.
/// Element deviceId of type xs:string.
    char*                                deviceId                       0;	///< Optional element.
/// Element channelType of type xs:string.
    char*                                channelType                    0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
/// Element orderNo of type xs:string.
    char*                                orderNo                        0;	///< Optional element.
/// Element takeSingleTicketNum of type xs:int.
    int                                  takeSingleTicketNum            1;	///< Required element.
/// Element faultOccurDate of type xs:string.
    char*                                faultOccurDate                 0;	///< Optional element.
/// Element faultSlipSeq of type xs:string.
    char*                                faultSlipSeq                   0;	///< Optional element.
/// Element erroCode of type xs:string.
    char*                                erroCode                       0;	///< Optional element.
/// Element errorMessage of type xs:string.
    char*                                errorMessage                   0;	///< Optional element.
};

/// "http://tempuri.org/":OrderExecuteFaultResp is a complexType with complexContent extension of "http://tempuri.org/":Responce.
class ns1__OrderExecuteFaultResp : public ns1__Responce
{ public:
/*  INHERITED FROM ns1__Responce:
    END OF INHERITED FROM ns1__Responce */
/// Element respCode of type xs:string.
    char*                                respCode                       0;	///< Optional element.
/// Element respCodeMemo of type xs:string.
    char*                                respCodeMemo                   0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
};

/// "http://tempuri.org/":HeartBeatReq is a complexType with complexContent extension of "http://tempuri.org/":Request.
class ns1__HeartBeatReq : public ns1__Request
{ public:
/*  INHERITED FROM ns1__Request:
    END OF INHERITED FROM ns1__Request */
/// Element reqSysDate of type xs:string.
    char*                                reqSysDate                     0;	///< Optional element.
/// Element operationCode of type xs:string.
    char*                                operationCode                  0;	///< Optional element.
/// Element cityCode of type xs:string.
    char*                                cityCode                       0;	///< Optional element.
/// Element deviceId of type xs:string.
    char*                                deviceId                       0;	///< Optional element.
/// Element channelType of type xs:string.
    char*                                channelType                    0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
};

/// "http://tempuri.org/":HeartBeatResp is a complexType with complexContent extension of "http://tempuri.org/":Responce.
class ns1__HeartBeatResp : public ns1__Responce
{ public:
/*  INHERITED FROM ns1__Responce:
    END OF INHERITED FROM ns1__Responce */
/// Element respCode of type xs:string.
    char*                                respCode                       0;	///< Optional element.
/// Element respCodeMemo of type xs:string.
    char*                                respCodeMemo                   0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
};

/// "http://tempuri.org/":SnapQRCodePrePayURLQueryReq is a complexType with complexContent extension of "http://tempuri.org/":Request.
class ns1__SnapQRCodePrePayURLQueryReq : public ns1__Request
{ public:
/*  INHERITED FROM ns1__Request:
    END OF INHERITED FROM ns1__Request */
/// Element reqSysDate of type xs:string.
    char*                                reqSysDate                     0;	///< Optional element.
/// Element operationCode of type xs:string.
    char*                                operationCode                  0;	///< Optional element.
/// Element cityCode of type xs:string.
    char*                                cityCode                       0;	///< Optional element.
/// Element deviceId of type xs:string.
    char*                                deviceId                       0;	///< Optional element.
/// Element channelType of type xs:string.
    char*                                channelType                    0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
/// Element orderNo of type xs:string.
    char*                                orderNo                        0;	///< Optional element.
};

/// "http://tempuri.org/":SnapQRCodePrePayURLQueryResp is a complexType with complexContent extension of "http://tempuri.org/":Responce.
class ns1__SnapQRCodePrePayURLQueryResp : public ns1__Responce
{ public:
/*  INHERITED FROM ns1__Responce:
    END OF INHERITED FROM ns1__Responce */
/// Element respCode of type xs:string.
    char*                                respCode                       0;	///< Optional element.
/// Element respCodeMemo of type xs:string.
    char*                                respCodeMemo                   0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
/// Element orderNo of type xs:string.
    char*                                orderNo                        0;	///< Optional element.
/// Element deviceId of type xs:string.
    char*                                deviceId                       0;	///< Optional element.
/// Element qrCode of type xs:string.
    char*                                qrCode                         0;	///< Optional element.
};

/// "http://tempuri.org/":SnapQRCodePayResultQueryReq is a complexType with complexContent extension of "http://tempuri.org/":Request.
class ns1__SnapQRCodePayResultQueryReq : public ns1__Request
{ public:
/*  INHERITED FROM ns1__Request:
    END OF INHERITED FROM ns1__Request */
/// Element reqSysDate of type xs:string.
    char*                                reqSysDate                     0;	///< Optional element.
/// Element operationCode of type xs:string.
    char*                                operationCode                  0;	///< Optional element.
/// Element cityCode of type xs:string.
    char*                                cityCode                       0;	///< Optional element.
/// Element deviceId of type xs:string.
    char*                                deviceId                       0;	///< Optional element.
/// Element channelType of type xs:string.
    char*                                channelType                    0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
/// Element orderNo of type xs:string.
    char*                                orderNo                        0;	///< Optional element.
/// Element qrCode of type xs:string.
    char*                                qrCode                         0;	///< Optional element.
};

/// "http://tempuri.org/":SnapQRCodePayResultQueryResp is a complexType with complexContent extension of "http://tempuri.org/":Responce.
class ns1__SnapQRCodePayResultQueryResp : public ns1__Responce
{ public:
/*  INHERITED FROM ns1__Responce:
    END OF INHERITED FROM ns1__Responce */
/// Element respCode of type xs:string.
    char*                                respCode                       0;	///< Optional element.
/// Element respCodeMemo of type xs:string.
    char*                                respCodeMemo                   0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
/// Element orderNo of type xs:string.
    char*                                orderNo                        0;	///< Optional element.
/// Element paymentDate of type xs:string.
    char*                                paymentDate                    0;	///< Optional element.
/// Element amount of type xs:string.
    char*                                amount                         0;	///< Optional element.
/// Element paymentAccount of type xs:string.
    char*                                paymentAccount                 0;	///< Optional element.
/// Element paymentResult of type xs:string.
    char*                                paymentResult                  0;	///< Optional element.
/// Element paymentDesc of type xs:string.
    char*                                paymentDesc                    0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
};

/// "http://tempuri.org/":SnapQRCodeTakeOrderQueryReq is a complexType with complexContent extension of "http://tempuri.org/":Request.
class ns1__SnapQRCodeTakeOrderQueryReq : public ns1__Request
{ public:
/*  INHERITED FROM ns1__Request:
    END OF INHERITED FROM ns1__Request */
/// Element reqSysDate of type xs:string.
    char*                                reqSysDate                     0;	///< Optional element.
/// Element operationCode of type xs:string.
    char*                                operationCode                  0;	///< Optional element.
/// Element cityCode of type xs:string.
    char*                                cityCode                       0;	///< Optional element.
/// Element deviceId of type xs:string.
    char*                                deviceId                       0;	///< Optional element.
/// Element channelType of type xs:string.
    char*                                channelType                    0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
/// Element randomFact of type xs:string.
    char*                                randomFact                     0;	///< Optional element.
};

/// "http://tempuri.org/":SnapQRCodeTakeOrderQueryResp is a complexType with complexContent extension of "http://tempuri.org/":Responce.
class ns1__SnapQRCodeTakeOrderQueryResp : public ns1__Responce
{ public:
/*  INHERITED FROM ns1__Responce:
    END OF INHERITED FROM ns1__Responce */
/// Element respCode of type xs:string.
    char*                                respCode                       0;	///< Optional element.
/// Element respCodeMemo of type xs:string.
    char*                                respCodeMemo                   0;	///< Optional element.
/// Element expandAttribute of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  expandAttribute                0;	///< Optional element.
/// Element paymentAccount of type xs:string.
    char*                                paymentAccount                 0;	///< Optional element.
/// Element orderNo of type xs:string.
    char*                                orderNo                        0;	///< Optional element.
/// Element pickupStationCode of type xs:string.
    char*                                pickupStationCode              0;	///< Optional element.
/// Element getOffStationCode of type xs:string.
    char*                                getOffStationCode              0;	///< Optional element.
/// Element singleTicketPrice of type xs:string.
    char*                                singleTicketPrice              0;	///< Optional element.
/// Element singleTicketNum of type xs:string.
    char*                                singleTicketNum                0;	///< Optional element.
/// Element singleTicketType of type xs:string.
    char*                                singleTicketType               0;	///< Optional element.
/// Element deviceId of type xs:string.
    char*                                deviceId                       0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns2  service name:	SLEWebServiceSoap 
//gsoap ns2  service type:	SLEWebServiceSoap 
//gsoap ns2  service port:	http://ygp.gzmtr.cn:9090/SnapQRCPay/SLEWebService.asmx 
//gsoap ns2  service namespace:	http://tempuri.org/SLEWebServiceSoap 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns3  service name:	SLEWebServiceSoap12 
//gsoap ns3  service type:	SLEWebServiceSoap 
//gsoap ns3  service port:	http://ygp.gzmtr.cn:9090/SnapQRCPay/SLEWebService.asmx 
//gsoap ns3  service namespace:	http://tempuri.org/SLEWebServiceSoap12 
//gsoap ns3  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref SLEWebServiceSoap

  - @ref SLEWebServiceSoap12

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page SLEWebServiceSoap Binding "SLEWebServiceSoap"

@section SLEWebServiceSoap_operations Operations of Binding  "SLEWebServiceSoap"

  - @ref __ns2__S1_USCORE001

  - @ref __ns2__S1_USCORE004

  - @ref __ns2__S1_USCORE005

  - @ref __ns2__S1_USCORE009

  - @ref __ns2__S1_USCORE018

  - @ref __ns2__S1_USCORE019

  - @ref __ns2__S1_USCORE020

@section SLEWebServiceSoap_ports Endpoints of Binding  "SLEWebServiceSoap"

  - http://ygp.gzmtr.cn:9090/SnapQRCPay/SLEWebService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page SLEWebServiceSoap12 Binding "SLEWebServiceSoap12"

@section SLEWebServiceSoap12_operations Operations of Binding  "SLEWebServiceSoap12"

  - @ref __ns3__S1_USCORE001

  - @ref __ns3__S1_USCORE004

  - @ref __ns3__S1_USCORE005

  - @ref __ns3__S1_USCORE009

  - @ref __ns3__S1_USCORE018

  - @ref __ns3__S1_USCORE019

  - @ref __ns3__S1_USCORE020

@section SLEWebServiceSoap12_ports Endpoints of Binding  "SLEWebServiceSoap12"

  - http://ygp.gzmtr.cn:9090/SnapQRCPay/SLEWebService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SLEWebServiceSoap                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__S1_USCORE001                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__S1_USCORE001" of service binding "SLEWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_001"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE001"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE001Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__S1_USCORE001(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE001*                 ns1__S1_USCORE001,
    // response parameters:
    _ns1__S1_USCORE001Response*         ns1__S1_USCORE001Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__S1_USCORE001(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE001*                 ns1__S1_USCORE001,
    // response parameters:
    _ns1__S1_USCORE001Response*         ns1__S1_USCORE001Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoapProxy.h):
@code
  class SLEWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoapService.h):
@code
  class SLEWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	S1_USCORE001 document
//gsoap ns2  service method-encoding:	S1_USCORE001 literal
//gsoap ns2  service method-action:	S1_USCORE001 http://tempuri.org/S1_001
//gsoap ns2  service method-output-action:	S1_USCORE001 http://tempuri.org//SLEWebServiceSoap/S1_USCORE001Response
int __ns2__S1_USCORE001(
    _ns1__S1_USCORE001*                 ns1__S1_USCORE001,	///< Request parameter
    _ns1__S1_USCORE001Response*         ns1__S1_USCORE001Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__S1_USCORE004                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__S1_USCORE004" of service binding "SLEWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_004"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE004"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE004Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__S1_USCORE004(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE004*                 ns1__S1_USCORE004,
    // response parameters:
    _ns1__S1_USCORE004Response*         ns1__S1_USCORE004Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__S1_USCORE004(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE004*                 ns1__S1_USCORE004,
    // response parameters:
    _ns1__S1_USCORE004Response*         ns1__S1_USCORE004Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoapProxy.h):
@code
  class SLEWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoapService.h):
@code
  class SLEWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	S1_USCORE004 document
//gsoap ns2  service method-encoding:	S1_USCORE004 literal
//gsoap ns2  service method-action:	S1_USCORE004 http://tempuri.org/S1_004
//gsoap ns2  service method-output-action:	S1_USCORE004 http://tempuri.org//SLEWebServiceSoap/S1_USCORE004Response
int __ns2__S1_USCORE004(
    _ns1__S1_USCORE004*                 ns1__S1_USCORE004,	///< Request parameter
    _ns1__S1_USCORE004Response*         ns1__S1_USCORE004Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__S1_USCORE005                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__S1_USCORE005" of service binding "SLEWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_005"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE005"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE005Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__S1_USCORE005(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE005*                 ns1__S1_USCORE005,
    // response parameters:
    _ns1__S1_USCORE005Response*         ns1__S1_USCORE005Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__S1_USCORE005(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE005*                 ns1__S1_USCORE005,
    // response parameters:
    _ns1__S1_USCORE005Response*         ns1__S1_USCORE005Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoapProxy.h):
@code
  class SLEWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoapService.h):
@code
  class SLEWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	S1_USCORE005 document
//gsoap ns2  service method-encoding:	S1_USCORE005 literal
//gsoap ns2  service method-action:	S1_USCORE005 http://tempuri.org/S1_005
//gsoap ns2  service method-output-action:	S1_USCORE005 http://tempuri.org//SLEWebServiceSoap/S1_USCORE005Response
int __ns2__S1_USCORE005(
    _ns1__S1_USCORE005*                 ns1__S1_USCORE005,	///< Request parameter
    _ns1__S1_USCORE005Response*         ns1__S1_USCORE005Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__S1_USCORE009                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__S1_USCORE009" of service binding "SLEWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_009"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE009"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE009Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__S1_USCORE009(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE009*                 ns1__S1_USCORE009,
    // response parameters:
    _ns1__S1_USCORE009Response*         ns1__S1_USCORE009Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__S1_USCORE009(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE009*                 ns1__S1_USCORE009,
    // response parameters:
    _ns1__S1_USCORE009Response*         ns1__S1_USCORE009Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoapProxy.h):
@code
  class SLEWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoapService.h):
@code
  class SLEWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	S1_USCORE009 document
//gsoap ns2  service method-encoding:	S1_USCORE009 literal
//gsoap ns2  service method-action:	S1_USCORE009 http://tempuri.org/S1_009
//gsoap ns2  service method-output-action:	S1_USCORE009 http://tempuri.org//SLEWebServiceSoap/S1_USCORE009Response
int __ns2__S1_USCORE009(
    _ns1__S1_USCORE009*                 ns1__S1_USCORE009,	///< Request parameter
    _ns1__S1_USCORE009Response*         ns1__S1_USCORE009Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__S1_USCORE018                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__S1_USCORE018" of service binding "SLEWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_018"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE018"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE018Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__S1_USCORE018(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE018*                 ns1__S1_USCORE018,
    // response parameters:
    _ns1__S1_USCORE018Response*         ns1__S1_USCORE018Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__S1_USCORE018(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE018*                 ns1__S1_USCORE018,
    // response parameters:
    _ns1__S1_USCORE018Response*         ns1__S1_USCORE018Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoapProxy.h):
@code
  class SLEWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoapService.h):
@code
  class SLEWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	S1_USCORE018 document
//gsoap ns2  service method-encoding:	S1_USCORE018 literal
//gsoap ns2  service method-action:	S1_USCORE018 http://tempuri.org/S1_018
//gsoap ns2  service method-output-action:	S1_USCORE018 http://tempuri.org//SLEWebServiceSoap/S1_USCORE018Response
int __ns2__S1_USCORE018(
    _ns1__S1_USCORE018*                 ns1__S1_USCORE018,	///< Request parameter
    _ns1__S1_USCORE018Response*         ns1__S1_USCORE018Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__S1_USCORE019                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__S1_USCORE019" of service binding "SLEWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_019"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE019"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE019Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__S1_USCORE019(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE019*                 ns1__S1_USCORE019,
    // response parameters:
    _ns1__S1_USCORE019Response*         ns1__S1_USCORE019Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__S1_USCORE019(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE019*                 ns1__S1_USCORE019,
    // response parameters:
    _ns1__S1_USCORE019Response*         ns1__S1_USCORE019Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoapProxy.h):
@code
  class SLEWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoapService.h):
@code
  class SLEWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	S1_USCORE019 document
//gsoap ns2  service method-encoding:	S1_USCORE019 literal
//gsoap ns2  service method-action:	S1_USCORE019 http://tempuri.org/S1_019
//gsoap ns2  service method-output-action:	S1_USCORE019 http://tempuri.org//SLEWebServiceSoap/S1_USCORE019Response
int __ns2__S1_USCORE019(
    _ns1__S1_USCORE019*                 ns1__S1_USCORE019,	///< Request parameter
    _ns1__S1_USCORE019Response*         ns1__S1_USCORE019Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__S1_USCORE020                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__S1_USCORE020" of service binding "SLEWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_020"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE020"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE020Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__S1_USCORE020(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE020*                 ns1__S1_USCORE020,
    // response parameters:
    _ns1__S1_USCORE020Response*         ns1__S1_USCORE020Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__S1_USCORE020(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE020*                 ns1__S1_USCORE020,
    // response parameters:
    _ns1__S1_USCORE020Response*         ns1__S1_USCORE020Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoapProxy.h):
@code
  class SLEWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoapService.h):
@code
  class SLEWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns2  service method-style:	S1_USCORE020 document
//gsoap ns2  service method-encoding:	S1_USCORE020 literal
//gsoap ns2  service method-action:	S1_USCORE020 http://tempuri.org/S1_020
//gsoap ns2  service method-output-action:	S1_USCORE020 http://tempuri.org//SLEWebServiceSoap/S1_USCORE020Response
int __ns2__S1_USCORE020(
    _ns1__S1_USCORE020*                 ns1__S1_USCORE020,	///< Request parameter
    _ns1__S1_USCORE020Response*         ns1__S1_USCORE020Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   SLEWebServiceSoap12                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__S1_USCORE001                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__S1_USCORE001" of service binding "SLEWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_001"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE001"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE001Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__S1_USCORE001(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE001*                 ns1__S1_USCORE001,
    // response parameters:
    _ns1__S1_USCORE001Response*         ns1__S1_USCORE001Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__S1_USCORE001(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE001*                 ns1__S1_USCORE001,
    // response parameters:
    _ns1__S1_USCORE001Response*         ns1__S1_USCORE001Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoap12Proxy.h):
@code
  class SLEWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoap12Service.h):
@code
  class SLEWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	S1_USCORE001 document
//gsoap ns3  service method-encoding:	S1_USCORE001 literal
//gsoap ns3  service method-action:	S1_USCORE001 http://tempuri.org/S1_001
//gsoap ns3  service method-output-action:	S1_USCORE001 http://tempuri.org//SLEWebServiceSoap/S1_USCORE001Response
int __ns3__S1_USCORE001(
    _ns1__S1_USCORE001*                 ns1__S1_USCORE001,	///< Request parameter
    _ns1__S1_USCORE001Response*         ns1__S1_USCORE001Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__S1_USCORE004                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__S1_USCORE004" of service binding "SLEWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_004"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE004"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE004Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__S1_USCORE004(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE004*                 ns1__S1_USCORE004,
    // response parameters:
    _ns1__S1_USCORE004Response*         ns1__S1_USCORE004Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__S1_USCORE004(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE004*                 ns1__S1_USCORE004,
    // response parameters:
    _ns1__S1_USCORE004Response*         ns1__S1_USCORE004Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoap12Proxy.h):
@code
  class SLEWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoap12Service.h):
@code
  class SLEWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	S1_USCORE004 document
//gsoap ns3  service method-encoding:	S1_USCORE004 literal
//gsoap ns3  service method-action:	S1_USCORE004 http://tempuri.org/S1_004
//gsoap ns3  service method-output-action:	S1_USCORE004 http://tempuri.org//SLEWebServiceSoap/S1_USCORE004Response
int __ns3__S1_USCORE004(
    _ns1__S1_USCORE004*                 ns1__S1_USCORE004,	///< Request parameter
    _ns1__S1_USCORE004Response*         ns1__S1_USCORE004Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__S1_USCORE005                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__S1_USCORE005" of service binding "SLEWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_005"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE005"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE005Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__S1_USCORE005(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE005*                 ns1__S1_USCORE005,
    // response parameters:
    _ns1__S1_USCORE005Response*         ns1__S1_USCORE005Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__S1_USCORE005(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE005*                 ns1__S1_USCORE005,
    // response parameters:
    _ns1__S1_USCORE005Response*         ns1__S1_USCORE005Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoap12Proxy.h):
@code
  class SLEWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoap12Service.h):
@code
  class SLEWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	S1_USCORE005 document
//gsoap ns3  service method-encoding:	S1_USCORE005 literal
//gsoap ns3  service method-action:	S1_USCORE005 http://tempuri.org/S1_005
//gsoap ns3  service method-output-action:	S1_USCORE005 http://tempuri.org//SLEWebServiceSoap/S1_USCORE005Response
int __ns3__S1_USCORE005(
    _ns1__S1_USCORE005*                 ns1__S1_USCORE005,	///< Request parameter
    _ns1__S1_USCORE005Response*         ns1__S1_USCORE005Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__S1_USCORE009                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__S1_USCORE009" of service binding "SLEWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_009"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE009"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE009Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__S1_USCORE009(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE009*                 ns1__S1_USCORE009,
    // response parameters:
    _ns1__S1_USCORE009Response*         ns1__S1_USCORE009Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__S1_USCORE009(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE009*                 ns1__S1_USCORE009,
    // response parameters:
    _ns1__S1_USCORE009Response*         ns1__S1_USCORE009Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoap12Proxy.h):
@code
  class SLEWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoap12Service.h):
@code
  class SLEWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	S1_USCORE009 document
//gsoap ns3  service method-encoding:	S1_USCORE009 literal
//gsoap ns3  service method-action:	S1_USCORE009 http://tempuri.org/S1_009
//gsoap ns3  service method-output-action:	S1_USCORE009 http://tempuri.org//SLEWebServiceSoap/S1_USCORE009Response
int __ns3__S1_USCORE009(
    _ns1__S1_USCORE009*                 ns1__S1_USCORE009,	///< Request parameter
    _ns1__S1_USCORE009Response*         ns1__S1_USCORE009Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__S1_USCORE018                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__S1_USCORE018" of service binding "SLEWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_018"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE018"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE018Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__S1_USCORE018(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE018*                 ns1__S1_USCORE018,
    // response parameters:
    _ns1__S1_USCORE018Response*         ns1__S1_USCORE018Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__S1_USCORE018(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE018*                 ns1__S1_USCORE018,
    // response parameters:
    _ns1__S1_USCORE018Response*         ns1__S1_USCORE018Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoap12Proxy.h):
@code
  class SLEWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoap12Service.h):
@code
  class SLEWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	S1_USCORE018 document
//gsoap ns3  service method-encoding:	S1_USCORE018 literal
//gsoap ns3  service method-action:	S1_USCORE018 http://tempuri.org/S1_018
//gsoap ns3  service method-output-action:	S1_USCORE018 http://tempuri.org//SLEWebServiceSoap/S1_USCORE018Response
int __ns3__S1_USCORE018(
    _ns1__S1_USCORE018*                 ns1__S1_USCORE018,	///< Request parameter
    _ns1__S1_USCORE018Response*         ns1__S1_USCORE018Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__S1_USCORE019                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__S1_USCORE019" of service binding "SLEWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_019"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE019"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE019Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__S1_USCORE019(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE019*                 ns1__S1_USCORE019,
    // response parameters:
    _ns1__S1_USCORE019Response*         ns1__S1_USCORE019Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__S1_USCORE019(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE019*                 ns1__S1_USCORE019,
    // response parameters:
    _ns1__S1_USCORE019Response*         ns1__S1_USCORE019Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoap12Proxy.h):
@code
  class SLEWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoap12Service.h):
@code
  class SLEWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	S1_USCORE019 document
//gsoap ns3  service method-encoding:	S1_USCORE019 literal
//gsoap ns3  service method-action:	S1_USCORE019 http://tempuri.org/S1_019
//gsoap ns3  service method-output-action:	S1_USCORE019 http://tempuri.org//SLEWebServiceSoap/S1_USCORE019Response
int __ns3__S1_USCORE019(
    _ns1__S1_USCORE019*                 ns1__S1_USCORE019,	///< Request parameter
    _ns1__S1_USCORE019Response*         ns1__S1_USCORE019Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__S1_USCORE020                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__S1_USCORE020" of service binding "SLEWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action: "http://tempuri.org/S1_020"

  - Addressing action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE020"

  - Addressing response action: "http://tempuri.org//SLEWebServiceSoap/S1_USCORE020Response"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__S1_USCORE020(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__S1_USCORE020*                 ns1__S1_USCORE020,
    // response parameters:
    _ns1__S1_USCORE020Response*         ns1__S1_USCORE020Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__S1_USCORE020(
    struct soap *soap,
    // request parameters:
    _ns1__S1_USCORE020*                 ns1__S1_USCORE020,
    // response parameters:
    _ns1__S1_USCORE020Response*         ns1__S1_USCORE020Response
  );
@endcode

C++ proxy class (defined in soapSLEWebServiceSoap12Proxy.h):
@code
  class SLEWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapSLEWebServiceSoap12Service.h):
@code
  class SLEWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	S1_USCORE020 document
//gsoap ns3  service method-encoding:	S1_USCORE020 literal
//gsoap ns3  service method-action:	S1_USCORE020 http://tempuri.org/S1_020
//gsoap ns3  service method-output-action:	S1_USCORE020 http://tempuri.org//SLEWebServiceSoap/S1_USCORE020Response
int __ns3__S1_USCORE020(
    _ns1__S1_USCORE020*                 ns1__S1_USCORE020,	///< Request parameter
    _ns1__S1_USCORE020Response*         ns1__S1_USCORE020Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://tempuri.org/"

  - <ns1:S1_001> @ref _ns1__S1_USCORE001
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE001(struct soap*, _ns1__S1_USCORE001*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE001(struct soap*, _ns1__S1_USCORE001*);
    @endcode

  - <ns1:S1_001Response> @ref _ns1__S1_USCORE001Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE001Response(struct soap*, _ns1__S1_USCORE001Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE001Response(struct soap*, _ns1__S1_USCORE001Response*);
    @endcode

  - <ns1:S1_004> @ref _ns1__S1_USCORE004
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE004(struct soap*, _ns1__S1_USCORE004*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE004(struct soap*, _ns1__S1_USCORE004*);
    @endcode

  - <ns1:S1_004Response> @ref _ns1__S1_USCORE004Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE004Response(struct soap*, _ns1__S1_USCORE004Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE004Response(struct soap*, _ns1__S1_USCORE004Response*);
    @endcode

  - <ns1:S1_005> @ref _ns1__S1_USCORE005
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE005(struct soap*, _ns1__S1_USCORE005*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE005(struct soap*, _ns1__S1_USCORE005*);
    @endcode

  - <ns1:S1_005Response> @ref _ns1__S1_USCORE005Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE005Response(struct soap*, _ns1__S1_USCORE005Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE005Response(struct soap*, _ns1__S1_USCORE005Response*);
    @endcode

  - <ns1:S1_009> @ref _ns1__S1_USCORE009
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE009(struct soap*, _ns1__S1_USCORE009*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE009(struct soap*, _ns1__S1_USCORE009*);
    @endcode

  - <ns1:S1_009Response> @ref _ns1__S1_USCORE009Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE009Response(struct soap*, _ns1__S1_USCORE009Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE009Response(struct soap*, _ns1__S1_USCORE009Response*);
    @endcode

  - <ns1:S1_018> @ref _ns1__S1_USCORE018
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE018(struct soap*, _ns1__S1_USCORE018*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE018(struct soap*, _ns1__S1_USCORE018*);
    @endcode

  - <ns1:S1_018Response> @ref _ns1__S1_USCORE018Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE018Response(struct soap*, _ns1__S1_USCORE018Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE018Response(struct soap*, _ns1__S1_USCORE018Response*);
    @endcode

  - <ns1:S1_019> @ref _ns1__S1_USCORE019
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE019(struct soap*, _ns1__S1_USCORE019*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE019(struct soap*, _ns1__S1_USCORE019*);
    @endcode

  - <ns1:S1_019Response> @ref _ns1__S1_USCORE019Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE019Response(struct soap*, _ns1__S1_USCORE019Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE019Response(struct soap*, _ns1__S1_USCORE019Response*);
    @endcode

  - <ns1:S1_020> @ref _ns1__S1_USCORE020
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE020(struct soap*, _ns1__S1_USCORE020*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE020(struct soap*, _ns1__S1_USCORE020*);
    @endcode

  - <ns1:S1_020Response> @ref _ns1__S1_USCORE020Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__S1_USCORE020Response(struct soap*, _ns1__S1_USCORE020Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__S1_USCORE020Response(struct soap*, _ns1__S1_USCORE020Response*);
    @endcode

*/

/* End of webpaysoap.h */

/* soapStub.h
   Generated by gSOAP 2.8.4 from webpaysoap.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://tempuri.org/"
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns1__Request
#define SOAP_TYPE_ns1__Request (8)
/* ns1:Request */
class SOAP_CMAC ns1__Request
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_ns1__Request */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Request() { ns1__Request::soap_default(NULL); }
	virtual ~ns1__Request() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfString
#define SOAP_TYPE_ns1__ArrayOfString (9)
/* ns1:ArrayOfString */
class SOAP_CMAC ns1__ArrayOfString
{
public:
	int __sizestring;	/* sequence of elements <string> */
	char **string;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_ns1__ArrayOfString */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfString() { ns1__ArrayOfString::soap_default(NULL); }
	virtual ~ns1__ArrayOfString() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Responce
#define SOAP_TYPE_ns1__Responce (11)
/* ns1:Responce */
class SOAP_CMAC ns1__Responce
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_ns1__Responce */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Responce() { ns1__Responce::soap_default(NULL); }
	virtual ~ns1__Responce() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE001
#define SOAP_TYPE__ns1__S1_USCORE001 (24)
/* ns1:S1_001 */
class SOAP_CMAC _ns1__S1_USCORE001
{
public:
	class ns1__OrderCommitReq *orderCommitReq;	/* optional element of type ns1:OrderCommitReq */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE__ns1__S1_USCORE001 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE001() { _ns1__S1_USCORE001::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE001() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE001Response
#define SOAP_TYPE__ns1__S1_USCORE001Response (25)
/* ns1:S1_001Response */
class SOAP_CMAC _ns1__S1_USCORE001Response
{
public:
	class ns1__OrderCommitResp *S1_USCORE001Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:OrderCommitResp */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE__ns1__S1_USCORE001Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE001Response() { _ns1__S1_USCORE001Response::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE001Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE004
#define SOAP_TYPE__ns1__S1_USCORE004 (26)
/* ns1:S1_004 */
class SOAP_CMAC _ns1__S1_USCORE004
{
public:
	class ns1__OrderExecuteResultReq *orderExecuteResultReq;	/* optional element of type ns1:OrderExecuteResultReq */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE__ns1__S1_USCORE004 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE004() { _ns1__S1_USCORE004::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE004() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE004Response
#define SOAP_TYPE__ns1__S1_USCORE004Response (27)
/* ns1:S1_004Response */
class SOAP_CMAC _ns1__S1_USCORE004Response
{
public:
	class ns1__OrderExecuteResultResp *S1_USCORE004Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:OrderExecuteResultResp */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE__ns1__S1_USCORE004Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE004Response() { _ns1__S1_USCORE004Response::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE004Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE005
#define SOAP_TYPE__ns1__S1_USCORE005 (28)
/* ns1:S1_005 */
class SOAP_CMAC _ns1__S1_USCORE005
{
public:
	class ns1__OrderExecuteFaultReq *orderExecuteFaultReq;	/* optional element of type ns1:OrderExecuteFaultReq */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE__ns1__S1_USCORE005 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE005() { _ns1__S1_USCORE005::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE005() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE005Response
#define SOAP_TYPE__ns1__S1_USCORE005Response (29)
/* ns1:S1_005Response */
class SOAP_CMAC _ns1__S1_USCORE005Response
{
public:
	class ns1__OrderExecuteFaultResp *S1_USCORE005Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:OrderExecuteFaultResp */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE__ns1__S1_USCORE005Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE005Response() { _ns1__S1_USCORE005Response::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE005Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE009
#define SOAP_TYPE__ns1__S1_USCORE009 (30)
/* ns1:S1_009 */
class SOAP_CMAC _ns1__S1_USCORE009
{
public:
	class ns1__HeartBeatReq *heartBeatReq;	/* optional element of type ns1:HeartBeatReq */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE__ns1__S1_USCORE009 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE009() { _ns1__S1_USCORE009::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE009() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE009Response
#define SOAP_TYPE__ns1__S1_USCORE009Response (31)
/* ns1:S1_009Response */
class SOAP_CMAC _ns1__S1_USCORE009Response
{
public:
	class ns1__HeartBeatResp *S1_USCORE009Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:HeartBeatResp */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE__ns1__S1_USCORE009Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE009Response() { _ns1__S1_USCORE009Response::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE009Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE018
#define SOAP_TYPE__ns1__S1_USCORE018 (32)
/* ns1:S1_018 */
class SOAP_CMAC _ns1__S1_USCORE018
{
public:
	class ns1__SnapQRCodePrePayURLQueryReq *snapQRCodePrePayURLQueryReq;	/* optional element of type ns1:SnapQRCodePrePayURLQueryReq */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE__ns1__S1_USCORE018 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE018() { _ns1__S1_USCORE018::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE018() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE018Response
#define SOAP_TYPE__ns1__S1_USCORE018Response (33)
/* ns1:S1_018Response */
class SOAP_CMAC _ns1__S1_USCORE018Response
{
public:
	class ns1__SnapQRCodePrePayURLQueryResp *S1_USCORE018Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:SnapQRCodePrePayURLQueryResp */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE__ns1__S1_USCORE018Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE018Response() { _ns1__S1_USCORE018Response::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE018Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE019
#define SOAP_TYPE__ns1__S1_USCORE019 (34)
/* ns1:S1_019 */
class SOAP_CMAC _ns1__S1_USCORE019
{
public:
	class ns1__SnapQRCodePayResultQueryReq *snapQRCodePayResultQueryReq;	/* optional element of type ns1:SnapQRCodePayResultQueryReq */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE__ns1__S1_USCORE019 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE019() { _ns1__S1_USCORE019::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE019() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE019Response
#define SOAP_TYPE__ns1__S1_USCORE019Response (35)
/* ns1:S1_019Response */
class SOAP_CMAC _ns1__S1_USCORE019Response
{
public:
	class ns1__SnapQRCodePayResultQueryResp *S1_USCORE019Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:SnapQRCodePayResultQueryResp */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE__ns1__S1_USCORE019Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE019Response() { _ns1__S1_USCORE019Response::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE019Response() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE020
#define SOAP_TYPE__ns1__S1_USCORE020 (36)
/* ns1:S1_020 */
class SOAP_CMAC _ns1__S1_USCORE020
{
public:
	class ns1__SnapQRCodeTakeOrderQueryReq *snapQRCodeTakeOrderQueryReq;	/* optional element of type ns1:SnapQRCodeTakeOrderQueryReq */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE__ns1__S1_USCORE020 */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE020() { _ns1__S1_USCORE020::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE020() { }
};
#endif

#ifndef SOAP_TYPE__ns1__S1_USCORE020Response
#define SOAP_TYPE__ns1__S1_USCORE020Response (37)
/* ns1:S1_020Response */
class SOAP_CMAC _ns1__S1_USCORE020Response
{
public:
	class ns1__SnapQRCodeTakeOrderQueryResp *S1_USCORE020Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:SnapQRCodeTakeOrderQueryResp */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE__ns1__S1_USCORE020Response */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__S1_USCORE020Response() { _ns1__S1_USCORE020Response::soap_default(NULL); }
	virtual ~_ns1__S1_USCORE020Response() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OrderCommitReq
#define SOAP_TYPE_ns1__OrderCommitReq (7)
/* ns1:OrderCommitReq */
class SOAP_CMAC ns1__OrderCommitReq : public ns1__Request
{
public:
	char *reqSysDate;	/* optional element of type xsd:string */
	char *operationCode;	/* optional element of type xsd:string */
	char *cityCode;	/* optional element of type xsd:string */
	char *deviceId;	/* optional element of type xsd:string */
	char *channelType;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
	char *paymentCode;	/* optional element of type xsd:string */
	char *msisdn;	/* optional element of type xsd:string */
	char *iccid;	/* optional element of type xsd:string */
	char *serviceId;	/* optional element of type xsd:string */
	char *paymentVendor;	/* optional element of type xsd:string */
	char *pickupStationCode;	/* optional element of type xsd:string */
	char *getOffStationCode;	/* optional element of type xsd:string */
	char *singleTicketPrice;	/* optional element of type xsd:string */
	char *singleTicketNum;	/* optional element of type xsd:string */
	char *singleTicketType;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_ns1__OrderCommitReq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OrderCommitReq() { ns1__OrderCommitReq::soap_default(NULL); }
	virtual ~ns1__OrderCommitReq() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OrderCommitResp
#define SOAP_TYPE_ns1__OrderCommitResp (10)
/* ns1:OrderCommitResp */
class SOAP_CMAC ns1__OrderCommitResp : public ns1__Responce
{
public:
	char *respCode;	/* optional element of type xsd:string */
	char *respCodeMemo;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
	char *partnerNo;	/* optional element of type xsd:string */
	char *orderNo;	/* optional element of type xsd:string */
	char *subject;	/* optional element of type xsd:string */
	char *body;	/* optional element of type xsd:string */
	char *payType;	/* optional element of type xsd:string */
	char *amount;	/* optional element of type xsd:string */
	char *account;	/* optional element of type xsd:string */
	char *notifyUrl;	/* optional element of type xsd:string */
	char *merchantCert;	/* optional element of type xsd:string */
	int timeout;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE_ns1__OrderCommitResp */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OrderCommitResp() { ns1__OrderCommitResp::soap_default(NULL); }
	virtual ~ns1__OrderCommitResp() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OrderExecuteResultReq
#define SOAP_TYPE_ns1__OrderExecuteResultReq (12)
/* ns1:OrderExecuteResultReq */
class SOAP_CMAC ns1__OrderExecuteResultReq : public ns1__Request
{
public:
	char *reqSysDate;	/* optional element of type xsd:string */
	char *operationCode;	/* optional element of type xsd:string */
	char *cityCode;	/* optional element of type xsd:string */
	char *deviceId;	/* optional element of type xsd:string */
	char *channelType;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
	char *orderNo;	/* optional element of type xsd:string */
	int takeSingleTicketNum;	/* required element of type xsd:int */
	char *takeSingleTicketDate;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_ns1__OrderExecuteResultReq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OrderExecuteResultReq() { ns1__OrderExecuteResultReq::soap_default(NULL); }
	virtual ~ns1__OrderExecuteResultReq() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OrderExecuteResultResp
#define SOAP_TYPE_ns1__OrderExecuteResultResp (13)
/* ns1:OrderExecuteResultResp */
class SOAP_CMAC ns1__OrderExecuteResultResp : public ns1__Responce
{
public:
	char *respCode;	/* optional element of type xsd:string */
	char *respCodeMemo;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_ns1__OrderExecuteResultResp */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OrderExecuteResultResp() { ns1__OrderExecuteResultResp::soap_default(NULL); }
	virtual ~ns1__OrderExecuteResultResp() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OrderExecuteFaultReq
#define SOAP_TYPE_ns1__OrderExecuteFaultReq (14)
/* ns1:OrderExecuteFaultReq */
class SOAP_CMAC ns1__OrderExecuteFaultReq : public ns1__Request
{
public:
	char *reqSysDate;	/* optional element of type xsd:string */
	char *operationCode;	/* optional element of type xsd:string */
	char *cityCode;	/* optional element of type xsd:string */
	char *deviceId;	/* optional element of type xsd:string */
	char *channelType;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
	char *orderNo;	/* optional element of type xsd:string */
	int takeSingleTicketNum;	/* required element of type xsd:int */
	char *faultOccurDate;	/* optional element of type xsd:string */
	char *faultSlipSeq;	/* optional element of type xsd:string */
	char *erroCode;	/* optional element of type xsd:string */
	char *errorMessage;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_ns1__OrderExecuteFaultReq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OrderExecuteFaultReq() { ns1__OrderExecuteFaultReq::soap_default(NULL); }
	virtual ~ns1__OrderExecuteFaultReq() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OrderExecuteFaultResp
#define SOAP_TYPE_ns1__OrderExecuteFaultResp (15)
/* ns1:OrderExecuteFaultResp */
class SOAP_CMAC ns1__OrderExecuteFaultResp : public ns1__Responce
{
public:
	char *respCode;	/* optional element of type xsd:string */
	char *respCodeMemo;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ns1__OrderExecuteFaultResp */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OrderExecuteFaultResp() { ns1__OrderExecuteFaultResp::soap_default(NULL); }
	virtual ~ns1__OrderExecuteFaultResp() { }
};
#endif

#ifndef SOAP_TYPE_ns1__HeartBeatReq
#define SOAP_TYPE_ns1__HeartBeatReq (16)
/* ns1:HeartBeatReq */
class SOAP_CMAC ns1__HeartBeatReq : public ns1__Request
{
public:
	char *reqSysDate;	/* optional element of type xsd:string */
	char *operationCode;	/* optional element of type xsd:string */
	char *cityCode;	/* optional element of type xsd:string */
	char *deviceId;	/* optional element of type xsd:string */
	char *channelType;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_ns1__HeartBeatReq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__HeartBeatReq() { ns1__HeartBeatReq::soap_default(NULL); }
	virtual ~ns1__HeartBeatReq() { }
};
#endif

#ifndef SOAP_TYPE_ns1__HeartBeatResp
#define SOAP_TYPE_ns1__HeartBeatResp (17)
/* ns1:HeartBeatResp */
class SOAP_CMAC ns1__HeartBeatResp : public ns1__Responce
{
public:
	char *respCode;	/* optional element of type xsd:string */
	char *respCodeMemo;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_ns1__HeartBeatResp */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__HeartBeatResp() { ns1__HeartBeatResp::soap_default(NULL); }
	virtual ~ns1__HeartBeatResp() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SnapQRCodePrePayURLQueryReq
#define SOAP_TYPE_ns1__SnapQRCodePrePayURLQueryReq (18)
/* ns1:SnapQRCodePrePayURLQueryReq */
class SOAP_CMAC ns1__SnapQRCodePrePayURLQueryReq : public ns1__Request
{
public:
	char *reqSysDate;	/* optional element of type xsd:string */
	char *operationCode;	/* optional element of type xsd:string */
	char *cityCode;	/* optional element of type xsd:string */
	char *deviceId;	/* optional element of type xsd:string */
	char *channelType;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
	char *orderNo;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_ns1__SnapQRCodePrePayURLQueryReq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SnapQRCodePrePayURLQueryReq() { ns1__SnapQRCodePrePayURLQueryReq::soap_default(NULL); }
	virtual ~ns1__SnapQRCodePrePayURLQueryReq() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SnapQRCodePrePayURLQueryResp
#define SOAP_TYPE_ns1__SnapQRCodePrePayURLQueryResp (19)
/* ns1:SnapQRCodePrePayURLQueryResp */
class SOAP_CMAC ns1__SnapQRCodePrePayURLQueryResp : public ns1__Responce
{
public:
	char *respCode;	/* optional element of type xsd:string */
	char *respCodeMemo;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
	char *orderNo;	/* optional element of type xsd:string */
	char *deviceId;	/* optional element of type xsd:string */
	char *qrCode;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_ns1__SnapQRCodePrePayURLQueryResp */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SnapQRCodePrePayURLQueryResp() { ns1__SnapQRCodePrePayURLQueryResp::soap_default(NULL); }
	virtual ~ns1__SnapQRCodePrePayURLQueryResp() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SnapQRCodePayResultQueryReq
#define SOAP_TYPE_ns1__SnapQRCodePayResultQueryReq (20)
/* ns1:SnapQRCodePayResultQueryReq */
class SOAP_CMAC ns1__SnapQRCodePayResultQueryReq : public ns1__Request
{
public:
	char *reqSysDate;	/* optional element of type xsd:string */
	char *operationCode;	/* optional element of type xsd:string */
	char *cityCode;	/* optional element of type xsd:string */
	char *deviceId;	/* optional element of type xsd:string */
	char *channelType;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
	char *orderNo;	/* optional element of type xsd:string */
	char *qrCode;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_ns1__SnapQRCodePayResultQueryReq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SnapQRCodePayResultQueryReq() { ns1__SnapQRCodePayResultQueryReq::soap_default(NULL); }
	virtual ~ns1__SnapQRCodePayResultQueryReq() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SnapQRCodePayResultQueryResp
#define SOAP_TYPE_ns1__SnapQRCodePayResultQueryResp (21)
/* ns1:SnapQRCodePayResultQueryResp */
class SOAP_CMAC ns1__SnapQRCodePayResultQueryResp : public ns1__Responce
{
public:
	char *respCode;	/* optional element of type xsd:string */
	char *respCodeMemo;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
	char *orderNo;	/* optional element of type xsd:string */
	char *paymentDate;	/* optional element of type xsd:string */
	char *amount;	/* optional element of type xsd:string */
	char *paymentAccount;	/* optional element of type xsd:string */
	char *paymentResult;	/* optional element of type xsd:string */
	char *paymentDesc;	/* optional element of type xsd:string */
	char *userName;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_ns1__SnapQRCodePayResultQueryResp */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SnapQRCodePayResultQueryResp() { ns1__SnapQRCodePayResultQueryResp::soap_default(NULL); }
	virtual ~ns1__SnapQRCodePayResultQueryResp() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SnapQRCodeTakeOrderQueryReq
#define SOAP_TYPE_ns1__SnapQRCodeTakeOrderQueryReq (22)
/* ns1:SnapQRCodeTakeOrderQueryReq */
class SOAP_CMAC ns1__SnapQRCodeTakeOrderQueryReq : public ns1__Request
{
public:
	char *reqSysDate;	/* optional element of type xsd:string */
	char *operationCode;	/* optional element of type xsd:string */
	char *cityCode;	/* optional element of type xsd:string */
	char *deviceId;	/* optional element of type xsd:string */
	char *channelType;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
	char *randomFact;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_ns1__SnapQRCodeTakeOrderQueryReq */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SnapQRCodeTakeOrderQueryReq() { ns1__SnapQRCodeTakeOrderQueryReq::soap_default(NULL); }
	virtual ~ns1__SnapQRCodeTakeOrderQueryReq() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SnapQRCodeTakeOrderQueryResp
#define SOAP_TYPE_ns1__SnapQRCodeTakeOrderQueryResp (23)
/* ns1:SnapQRCodeTakeOrderQueryResp */
class SOAP_CMAC ns1__SnapQRCodeTakeOrderQueryResp : public ns1__Responce
{
public:
	char *respCode;	/* optional element of type xsd:string */
	char *respCodeMemo;	/* optional element of type xsd:string */
	ns1__ArrayOfString *expandAttribute;	/* optional element of type ns1:ArrayOfString */
	char *paymentAccount;	/* optional element of type xsd:string */
	char *orderNo;	/* optional element of type xsd:string */
	char *pickupStationCode;	/* optional element of type xsd:string */
	char *getOffStationCode;	/* optional element of type xsd:string */
	char *singleTicketPrice;	/* optional element of type xsd:string */
	char *singleTicketNum;	/* optional element of type xsd:string */
	char *singleTicketType;	/* optional element of type xsd:string */
	char *deviceId;	/* optional element of type xsd:string */
	char *userName;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_ns1__SnapQRCodeTakeOrderQueryResp */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SnapQRCodeTakeOrderQueryResp() { ns1__SnapQRCodeTakeOrderQueryResp::soap_default(NULL); }
	virtual ~ns1__SnapQRCodeTakeOrderQueryResp() { }
};
#endif

#ifndef SOAP_TYPE___ns2__S1_USCORE001
#define SOAP_TYPE___ns2__S1_USCORE001 (58)
/* Operation wrapper: */
struct __ns2__S1_USCORE001
{
public:
	_ns1__S1_USCORE001 *ns1__S1_USCORE001;	/* optional element of type ns1:S1_001 */
};
#endif

#ifndef SOAP_TYPE___ns2__S1_USCORE004
#define SOAP_TYPE___ns2__S1_USCORE004 (62)
/* Operation wrapper: */
struct __ns2__S1_USCORE004
{
public:
	_ns1__S1_USCORE004 *ns1__S1_USCORE004;	/* optional element of type ns1:S1_004 */
};
#endif

#ifndef SOAP_TYPE___ns2__S1_USCORE005
#define SOAP_TYPE___ns2__S1_USCORE005 (66)
/* Operation wrapper: */
struct __ns2__S1_USCORE005
{
public:
	_ns1__S1_USCORE005 *ns1__S1_USCORE005;	/* optional element of type ns1:S1_005 */
};
#endif

#ifndef SOAP_TYPE___ns2__S1_USCORE009
#define SOAP_TYPE___ns2__S1_USCORE009 (70)
/* Operation wrapper: */
struct __ns2__S1_USCORE009
{
public:
	_ns1__S1_USCORE009 *ns1__S1_USCORE009;	/* optional element of type ns1:S1_009 */
};
#endif

#ifndef SOAP_TYPE___ns2__S1_USCORE018
#define SOAP_TYPE___ns2__S1_USCORE018 (74)
/* Operation wrapper: */
struct __ns2__S1_USCORE018
{
public:
	_ns1__S1_USCORE018 *ns1__S1_USCORE018;	/* optional element of type ns1:S1_018 */
};
#endif

#ifndef SOAP_TYPE___ns2__S1_USCORE019
#define SOAP_TYPE___ns2__S1_USCORE019 (78)
/* Operation wrapper: */
struct __ns2__S1_USCORE019
{
public:
	_ns1__S1_USCORE019 *ns1__S1_USCORE019;	/* optional element of type ns1:S1_019 */
};
#endif

#ifndef SOAP_TYPE___ns2__S1_USCORE020
#define SOAP_TYPE___ns2__S1_USCORE020 (82)
/* Operation wrapper: */
struct __ns2__S1_USCORE020
{
public:
	_ns1__S1_USCORE020 *ns1__S1_USCORE020;	/* optional element of type ns1:S1_020 */
};
#endif

#ifndef SOAP_TYPE___ns3__S1_USCORE001
#define SOAP_TYPE___ns3__S1_USCORE001 (84)
/* Operation wrapper: */
struct __ns3__S1_USCORE001
{
public:
	_ns1__S1_USCORE001 *ns1__S1_USCORE001;	/* optional element of type ns1:S1_001 */
};
#endif

#ifndef SOAP_TYPE___ns3__S1_USCORE004
#define SOAP_TYPE___ns3__S1_USCORE004 (86)
/* Operation wrapper: */
struct __ns3__S1_USCORE004
{
public:
	_ns1__S1_USCORE004 *ns1__S1_USCORE004;	/* optional element of type ns1:S1_004 */
};
#endif

#ifndef SOAP_TYPE___ns3__S1_USCORE005
#define SOAP_TYPE___ns3__S1_USCORE005 (88)
/* Operation wrapper: */
struct __ns3__S1_USCORE005
{
public:
	_ns1__S1_USCORE005 *ns1__S1_USCORE005;	/* optional element of type ns1:S1_005 */
};
#endif

#ifndef SOAP_TYPE___ns3__S1_USCORE009
#define SOAP_TYPE___ns3__S1_USCORE009 (90)
/* Operation wrapper: */
struct __ns3__S1_USCORE009
{
public:
	_ns1__S1_USCORE009 *ns1__S1_USCORE009;	/* optional element of type ns1:S1_009 */
};
#endif

#ifndef SOAP_TYPE___ns3__S1_USCORE018
#define SOAP_TYPE___ns3__S1_USCORE018 (92)
/* Operation wrapper: */
struct __ns3__S1_USCORE018
{
public:
	_ns1__S1_USCORE018 *ns1__S1_USCORE018;	/* optional element of type ns1:S1_018 */
};
#endif

#ifndef SOAP_TYPE___ns3__S1_USCORE019
#define SOAP_TYPE___ns3__S1_USCORE019 (94)
/* Operation wrapper: */
struct __ns3__S1_USCORE019
{
public:
	_ns1__S1_USCORE019 *ns1__S1_USCORE019;	/* optional element of type ns1:S1_019 */
};
#endif

#ifndef SOAP_TYPE___ns3__S1_USCORE020
#define SOAP_TYPE___ns3__S1_USCORE020 (96)
/* Operation wrapper: */
struct __ns3__S1_USCORE020
{
public:
	_ns1__S1_USCORE020 *ns1__S1_USCORE020;	/* optional element of type ns1:S1_020 */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (97)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (98)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (100)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (103)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (104)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
